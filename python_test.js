var u=Object.create;var s=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var d=Object.getPrototypeOf,h=Object.prototype.hasOwnProperty;var y=(o,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of p(t))!h.call(o,r)&&r!==e&&s(o,r,{get:()=>t[r],enumerable:!(n=g(t,r))||n.enumerable});return o};var _=(o,t,e)=>(e=o!=null?u(d(o)):{},y(t||!o||!o.__esModule?s(e,"default",{value:o,enumerable:!0}):e,o));var l=_(require("node:fs/promises")),f=require("pyodide");function i(){return performance.now()}function c(o){console.log(`Wasm execution took: ${o.toFixed(2)} ms`)}function a(o){console.log(`Wasm calculated fibonacci result: ${o}`)}async function m(o){try{console.log(`[Host] Fetching: ${o}`);let t=await fetch(o);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);let e=await t.text();return console.log(`[Host] Fetched ${e.length} bytes from ${o}`),e}catch(t){return console.error(`[Host] Error fetching ${o}: ${t.message}`),JSON.stringify({error:t.message})}}var w=async()=>{let o=await(0,f.loadPyodide)();o.registerJsModule("kitledger",{now:i,fetch_json:m,print_time_ms:c,log_result:a});let t=await l.default.readFile("python.py","utf8");await o.runPythonAsync(t)};w().catch(o=>{console.error("Caught an error in main:",o),process.exit(1)});
